[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 HodgePotentialHumanFlow authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/PotentialInLondon.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Potential of Human flow (complete graph case)","text":"vignette shows scalar potential commuting flow London.","code":""},{"path":"/articles/PotentialInLondon.html","id":"dataset-origin-destination-matrix-in-london","dir":"Articles","previous_headings":"","what":"Dataset: origin-destination matrix in London","title":"Potential of Human flow (complete graph case)","text":"use trip dataset home workplace 2011 obtained UK Data Service. OD matrix denotes number commuters aggregated middle layer super output area (MSOA) 2011 census. dataset covers MSOAs England Wales. , selected trips among MSOAs Greater London.","code":"od = read.csv(\"london.csv\")  head(od) #>      origin      dest trips #> 1 E02000001 E02000001  1506 #> 2 E02000001 E02000014     2 #> 3 E02000001 E02000016     3 #> 4 E02000001 E02000025     1 #> 5 E02000001 E02000028     1 #> 6 E02000001 E02000051     1"},{"path":"/articles/PotentialInLondon.html","id":"hodge-kodaira-decomposition","dir":"Articles","previous_headings":"","what":"Hodge-Kodaira decomposition","title":"Potential of Human flow (complete graph case)","text":", apply Hodge-Kodaira decomposition, human flow uniquely decomposed potential-driven (gradient) flow curl flow (see paper details). First, consider net flow movement given OD matrix \\(M\\): \\[   = M - M^{\\intercal}, \\label{eq:netflow} \\] \\(M^{\\intercal}\\) denotes transpose \\(M\\). Matrix \\(\\) skew-symmetric, , \\(A_{ij} = - A_{ji}\\), possibly described combinatorial gradient potential \\(s\\), given \\[   (\\text{grad}\\, s)(, j) =  s_j-s_i. \\] , define optimization problem potential \\(s\\): \\[\\begin{equation}   \\min_s  \\lVert   \\text{grad}\\ s - \\rVert_2 = \\min_s \\left[ \\sum_{,j} \\left[ (s_j - s_i) - A_{ij} \\right]^2 \\right]. \\label{eq:optimization_problem} \\end{equation}\\] According combinatorial Hodge theory, space net flow \\(\\mathcal{}\\) orthogonally decomposed two subspaces: \\[\\begin{equation}   \\mathcal{}  = \\text{im}(\\text{grad})  \\oplus \\text{im}(\\text{curl}^*), \\end{equation}\\] \\(\\text{curl}\\) combinatorial curl operator \\(\\text{curl}^*\\) adjoint operator. Thus, optimization problem equivalent \\(l_2\\)-projection \\(\\) onto im(grad), minimal norm solution given \\[\\begin{equation}   s_i = -\\frac{1}{N} \\text{div} = - \\frac{1}{N} \\sum_{j=1}^N A_{ij}, \\label{eq:potential} \\end{equation}\\] \\(s_i\\) potential \\(\\)th location \\(N\\) number locations. noted \\(s_i\\) negative potential (\\(s_i=-V_i\\)). means observe trips place lower potential another higher potential. Using package, potential obtained following function.","code":"s = HodgePotentialHumanFlow::scalar_potential_on_complete_graph(od) #> Percentage of gradient flow = 52.71 head(s) #>        zone    potential #> 1 E02000001 244.80671414 #> 2 E02000002  -1.22482197 #> 3 E02000003  -1.15462869 #> 4 E02000004  -1.23397762 #> 5 E02000005  -1.93591048 #> 6 E02000007   0.04170905"},{"path":"/articles/PotentialInLondon.html","id":"plot-the-obtained-potential-landscape","dir":"Articles","previous_headings":"","what":"Plot the obtained potential landscape","title":"Potential of Human flow (complete graph case)","text":"shapefile MSOAs obtained Office National Statistics). Plot obtained potential landscape using sf package.","code":"suppressWarnings(library(sf)) #> Linking to GEOS 3.11.1, GDAL 3.6.3, PROJ 9.2.0; sf_use_s2() is TRUE shape = st_read(\"london.geojson\")  #> Reading layer `MSOA_in_London' from data source  #>   `/home/aoki/Dropbox/00CurrentProject/HodgePotentialHumanFlow/vignettes/london.geojson'  #>   using driver `GeoJSON' #> Simple feature collection with 983 features and 6 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 503569.4 ymin: 155850.7 xmax: 561959.4 ymax: 200934.3 #> Projected CRS: OSGB36 / British National Grid merged = merge(shape, s, all.x=T, by.x=\"msoa11cd\", by.y=\"zone\") head(merged) #> Simple feature collection with 6 features and 7 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 530968.5 ymin: 180510.9 xmax: 551945.7 ymax: 191139.3 #> Projected CRS: OSGB36 / British National Grid #>    msoa11cd objectid                 msoa11nm                msoa11nmw #> 1 E02000001        1       City of London 001       City of London 001 #> 2 E02000002        2 Barking and Dagenham 001 Barking and Dagenham 001 #> 3 E02000003        3 Barking and Dagenham 002 Barking and Dagenham 002 #> 4 E02000004        4 Barking and Dagenham 003 Barking and Dagenham 003 #> 5 E02000005        5 Barking and Dagenham 004 Barking and Dagenham 004 #> 6 E02000007        6 Barking and Dagenham 006 Barking and Dagenham 006 #>   st_areashape st_lengthshape    potential                       geometry #> 1      2897837       9297.742 244.80671414 MULTIPOLYGON (((532155.5 18... #> 2      2161565       8307.072  -1.22482197 MULTIPOLYGON (((548879.6 19... #> 3      2141516       9359.992  -1.15462869 MULTIPOLYGON (((548960.4 18... #> 4      2492948       8476.617  -1.23397762 MULTIPOLYGON (((551551.9 18... #> 5      1187953       7322.466  -1.93591048 MULTIPOLYGON (((549238.9 18... #> 6      1735998       7071.096   0.04170905 MULTIPOLYGON (((549420.5 18... library(ggplot2) library(viridis) #> Loading required package: viridisLite library(scales) #>  #> Attaching package: 'scales' #> The following object is masked from 'package:viridis': #>  #>     viridis_pal ggplot(data=merged, aes(fill=potential)) + geom_sf(color=\"black\", lwd=0.2)  + scale_fill_viridis_c(option=\"viridis\", trans=modulus_trans(0)) + theme_bw() + theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text = element_blank(),panel.grid.major = element_line(colour = \"transparent\"))"},{"path":"/articles/PotentialInTokyo.html","id":"tutorial-potential-of-human-flow-general-graph-case","dir":"Articles","previous_headings":"","what":"Tutorial: Potential of Human flow (general graph case)","title":"Potential of Human flow (general graph case)","text":"tutorial demonstrates detect significant sinks sources human flow according scalar potential case Tokyo metropolitan area.","code":""},{"path":"/articles/PotentialInTokyo.html","id":"dataset-origin-destination-matrix-in-tokyo-with-trip-distance","dir":"Articles","previous_headings":"Tutorial: Potential of Human flow (general graph case)","what":"Dataset: origin-destination matrix in Tokyo with trip distance","title":"Potential of Human flow (general graph case)","text":"used dataset person-trip surveys conducted 2018 Tokyo metropolitan area, publicly available Tokyo Metropolitan Region Transportation Planning Commission. first two columns indicate origin destination zones, representing geographical zone code defined Tokyo Metropolitan Region Transportation Planning Commission. trips column shows number trips. added road_distance_in_km column showing trip distance origin destination. distance evaluated road distance centroids origin destination zones, calculated Open Source Routing Machine (OSRM) based Open Street Map. dataset contains 615 unique zones 615 \\(\\times\\) 614 rows (excluding trips within zone).","code":"suppressPackageStartupMessages(library(tidyverse)) od = read_csv(\"tokyo2018.csv\",               col_types=list(trips = \"n\", road_distance_in_km=\"n\",.default=\"c\"))  od #> # A tibble: 377,610 × 4 #>    origin dest  trips road_distance_in_km #>    <chr>  <chr> <dbl>               <dbl> #>  1 0011   0010    990                3.24 #>  2 0012   0010   2445                2.00 #>  3 0020   0010   2793                2.81 #>  4 0021   0010      0                2.07 #>  5 0022   0010      0                2.26 #>  6 0023   0010   1692                3.30 #>  7 0024   0010   1318                4.25 #>  8 0030   0010   2525                4.65 #>  9 0031   0010    893                3.64 #> 10 0032   0010   1426                8.81 #> # ℹ 377,600 more rows"},{"path":"/articles/PotentialInTokyo.html","id":"preprocess-convert-the-given-dataset-to-net-flow-y-on-a-graph-gve","dir":"Articles","previous_headings":"Tutorial: Potential of Human flow (general graph case)","what":"Preprocess: convert the given dataset to net-flow \\(Y\\) on a graph \\(G(V,E)\\)","title":"Potential of Human flow (general graph case)","text":"described main text, denoted net movements people \\(Y\\) graph $G(V,E). current context, vertices \\(V\\) correspond locations edges \\(E\\) connections . Distances \\(d_{ij}\\) locations \\(\\) \\(j\\) crucially affect connections. Trips rare long distances even potentials endpoints differ. hand, trips often observed short distances. implies zero movements happen two distinct situations. distinguish nonexistence movements based distance factors, assumed pair locations connected road distance \\(d_{ij}\\) within threshold \\(\\theta\\). calculate threshold distance \\(\\theta\\) trips rarely observed. show cumulative distribution trip distance \\(P(X<d)\\) function trip distance \\(d\\). threshold \\(\\theta\\) determined based criterion \\(P(X<\\theta) = 0.99\\).  Next, make net flows pairs locations select \\(d_{ij} < \\theta\\).","code":"df = od %>% arrange(road_distance_in_km) %>% mutate(cum_trips = cumsum(trips)) df = df %>% mutate( cum_dist = cum_trips / sum(df$trips)) df #> # A tibble: 377,610 × 6 #>    origin dest  trips road_distance_in_km cum_trips  cum_dist #>    <chr>  <chr> <dbl>               <dbl>     <dbl>     <dbl> #>  1 1021   1020    208                1.00       208 0.0000133 #>  2 1020   1021   1643                1.00      1851 0.000118  #>  3 1022   1021    640                1.04      2491 0.000159  #>  4 1021   1022    904                1.04      3395 0.000216  #>  5 3017   3013   1383                1.17      4778 0.000305  #>  6 3013   3017    829                1.17      5607 0.000358  #>  7 6023   6021   1820                1.17      7427 0.000474  #>  8 6021   6023   1035                1.17      8462 0.000540  #>  9 6061   6060   2601                1.18     11063 0.000705  #> 10 6060   6061    216                1.18     11279 0.000719  #> # ℹ 377,600 more rows  # find intersection with threshold y0 = 0.99 RootLinearInterpolant <- function (x, y, y0 = 0) {   if (is.unsorted(x)) {     ind <- order(x)     x <- x[ind]; y <- y[ind]   }   z <- y - y0   k <- which(z[-1] * z[-length(z)] < 0)   xk <- x[k] - z[k] * (x[k + 1] - x[k]) / (z[k + 1] - z[k])   return(xk) } thres = RootLinearInterpolant(df$road_distance_in_km, df$cum_dist, y0)  library(ggplot2) theme_set(theme_minimal()) ggplot(df, aes(x = road_distance_in_km, y=cum_dist) ) +   geom_line(linewidth=1.3) +    xlab(\"Distance [km]\") +    ylab(\"Cumulative distribution, Prob. (X < d)\")  +    geom_hline(yintercept= y0, color=\"red\", linetype=\"dashed\") +   annotate(\"segment\", x=thres,xend=thres, y=y0 - 0.1, yend=y0,             arrow=arrow(length = unit(2, \"mm\")) ) +    annotate(\"text\", x = thres, y = y0 - 0.15,             label=sprintf(\"%.1fkm\", thres),size=3) od_forward = od  od_backward = od_forward %>% select(origin,dest,trips) %>%    rename(origin_new = dest, dest_new = origin) %>%    rename(origin = origin_new, dest = dest_new, back_trips = trips ) %>%   select(origin, dest, back_trips)   netflow = od_forward %>% left_join(od_backward,by = join_by(origin, dest)) %>%   filter(origin > dest) %>% mutate(netflow = trips - back_trips) %>%    rename(vertex1 = origin, vertex2=dest)  netflow_selected = netflow %>%    filter(road_distance_in_km < thres) %>%    select(vertex1,vertex2,netflow)  netflow_selected #> # A tibble: 117,329 × 3 #>    vertex1 vertex2 netflow #>    <chr>   <chr>     <dbl> #>  1 0011    0010        990 #>  2 0012    0010       2323 #>  3 0020    0010       2793 #>  4 0021    0010          0 #>  5 0022    0010          0 #>  6 0023    0010       1692 #>  7 0024    0010       1318 #>  8 0030    0010       2525 #>  9 0031    0010        893 #> 10 0032    0010       1426 #> # ℹ 117,319 more rows"},{"path":"/articles/PotentialInTokyo.html","id":"calculate-the-potential-s-for-the-net-flow-y","dir":"Articles","previous_headings":"Tutorial: Potential of Human flow (general graph case)","what":"Calculate the potential \\(s\\) for the net flow \\(Y\\)","title":"Potential of Human flow (general graph case)","text":"potential Equation (1) main text calculated using function scalar_potential_on_graph HodgePotentialHumanFlow package. function returns dataframe three columns: zone, potential, \\(p\\)-value. \\(p\\)-value indicates \\(P(\\hat{s}_i > s_i)\\) null hypothesis (see main text details). sample number calculating pseudo \\(p\\)-value can specified option num_samples (default = 1e5). plot potential map using shapefile publicly available Tokyo Metropolitan Region Transportation Planning Commission.","code":"library(HodgePotentialHumanFlow) s = HodgePotentialHumanFlow::scalar_potential_on_graph(netflow_selected) #> Calculating p-values by monte calro (100000 steps). head(s) #>   zone potential pvalue_above #> 1 0011  406.7119            0 #> 2 0012  494.1058            0 #> 3 0020  261.1093            0 #> 4 0021  222.9379            0 #> 5 0022  191.7659            0 #> 6 0023  227.1667            0 s = HodgePotentialHumanFlow::scalar_potential_on_graph(netflow_selected, num_samples = 1e5) #> Calculating p-values by monte calro (100000 steps). library(sf) #> Linking to GEOS 3.11.1, GDAL 3.6.3, PROJ 9.2.0; sf_use_s2() is TRUE map = st_read(\"tokyo2018.gpkg\", quiet=T)  map = map %>% left_join(s) #> Joining with `by = join_by(zone)`  library(ggplot2) library(viridis,quietly = T) suppressPackageStartupMessages(library(urbnthemes,quietly=T)) library(ggspatial,quietly=T) suppressPackageStartupMessages(library(scales,quiet = T))   ggplot(data=map, aes(fill=potential)) +    geom_sf(color=\"black\", lwd=0.2)  +   scale_fill_viridis_c(option=\"viridis\", trans=modulus_trans(0.3)) +   theme_urbn_map(base_family=\"Helvetica\") +   theme(legend.key.height=unit(1.5,\"line\")) +   annotation_scale(location = \"bl\") +    annotation_north_arrow(location = \"br\", which_north = \"grid\",    style = north_arrow_fancy_orienteering(text_size =0, line_width=0.5))"},{"path":"/articles/PotentialInTokyo.html","id":"detect-significant-sinks-and-sources","dir":"Articles","previous_headings":"Tutorial: Potential of Human flow (general graph case)","what":"Detect significant sinks and sources","title":"Potential of Human flow (general graph case)","text":"detect significant sinks zones positive potential, multiple-comparison test performed using \\(p\\)-value control false discovery rate (FDR), \\(\\alpha (=0.05)\\), standard Benjamini-Hochberg procedure. Similarly, zones negative potential, multiple-comparison test performed using \\(p\\)-value \\(1 - P(\\hat{s}_i > s_i)\\) FDR control.","code":"df_sink= s %>% filter(potential >= 0) df_sink$pvalue_adj = p.adjust(df_sink$pvalue_above, method=\"fdr\") df_source= s %>% filter(potential < 0) df_source$pvalue_adj = p.adjust(1 - df_source$pvalue_above, method=\"fdr\") df = rbind(df_sink, df_source)  library(sf) alpha = 0.05 map = st_read(\"tokyo2018.gpkg\", quiet=T)  map = map %>% left_join(df) %>% rowwise() %>%     mutate(type = case_when(                       potential >= 0 & pvalue_adj < alpha ~ \"Significant sink\",                       potential < 0 & pvalue_adj < alpha ~ \"Significant source\",    )) #> Joining with `by = join_by(zone)` ggplot(data=map, aes(fill=type)) +    geom_sf(color=\"black\", lwd=0.2)  +   theme_urbn_map(base_family=\"Helvetica\") +   scale_fill_manual(values = c(\"#e41a1c\",\"navyblue\"),na.translate = F) +   theme(legend.title=element_blank())"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Takaaki Aoki. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aoki T (2023). HodgePotentialHumanFlow: Potental Human flow (Origin-Destination matrix) Hodge-Kodaira decomposition. R package version 0.2.3.","code":"@Manual{,   title = {HodgePotentialHumanFlow: Potental of Human flow (Origin-Destination matrix) by Hodge-Kodaira decomposition},   author = {Takaaki Aoki},   year = {2023},   note = {R package version 0.2.3}, }"},{"path":"/index.html","id":"hodgepotentialhumanflow","dir":"","previous_headings":"","what":"Potental of Human flow (Origin-Destination matrix) by Hodge-Kodaira decomposition","title":"Potental of Human flow (Origin-Destination matrix) by Hodge-Kodaira decomposition","text":"package provides Hodge-Kodaira decomposition tools human flow. See tutorial references details.","code":""},{"path":"/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Potental of Human flow (Origin-Destination matrix) by Hodge-Kodaira decomposition","text":"","code":"library(devtools) install_github(\"TakaakiAokiWork/HodgePotentialHumanFlow\")"},{"path":"/index.html","id":"abstract-from-our-paper-1","dir":"","previous_headings":"","what":"Abstract from our paper [1]","title":"Potental of Human flow (Origin-Destination matrix) by Hodge-Kodaira decomposition","text":"Human flow cities indicates social activity can reveal urban spatial structures based human behaviours relevant applications. Scalar potential mathematical concept , properly applied, can provide intuitive view human flow. However, definition potential terms origin-destination flow matrix feasibility remain unresolved. case, use Hodge–Kodaira decomposition, uniquely decomposes matrix potential-driven (gradient) flow curl flow. depict potential landscapes cities resulting commuting flow reveal landscapes either changed remained unchanged years methods transportation. determine well commuting flow described potential, evaluating percentage gradient component metropolitan areas USA show gradient component almost 100% several areas; areas, however, curl component dominant, indicating importance circular flow along triangles places. potential landscape provides easy--use visualisation tool showing attractive places human flow help variety applications commerce, urban design, epidemic spreading.","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Potental of Human flow (Origin-Destination matrix) by Hodge-Kodaira decomposition","text":"[1] Urban spatial structures human flow Hodge-Kodaira decomposition, Takaaki Aoki, Shota Fujishita & Naoya Fujiwara, Scientific Reports, vol. 12, 11258 (2022). DOI: 10.1038/s41598-022-15512-z [2] City center identification attractive places people’s collective movements, Takaaki Aoki, Shota Fujishima & Naoya Fujiwara, arXiv:2211.14496 [physics.soc-ph]","code":""},{"path":"/reference/HodgePotentialHumanFlow-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Scalar potential of origin-destionation matrix by Hodge-Kodaira decompostion — HodgePotentialHumanFlow-package","title":"Scalar potential of origin-destionation matrix by Hodge-Kodaira decompostion — HodgePotentialHumanFlow-package","text":"package implements Hodge-Kodaira decomposition origin-destination matrix","code":""},{"path":"/reference/HodgePotentialHumanFlow-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scalar potential of origin-destionation matrix by Hodge-Kodaira decompostion — HodgePotentialHumanFlow-package","text":"Maintainer: Takaaki Aoki takaaki.aoki.work@gmail.com (ORCID)","code":""},{"path":"/reference/pontential_in_complete_graph_case.html","id":null,"dir":"Reference","previous_headings":"","what":"First example — pontential_in_complete_graph_case","title":"First example — pontential_in_complete_graph_case","text":"First example","code":""},{"path":"/reference/pontential_in_complete_graph_case.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"First example — pontential_in_complete_graph_case","text":"","code":"pontential_in_complete_graph_case(origin, dest, trips, unique_geozomes)"},{"path":"/reference/pontential_in_complete_graph_case.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"First example — pontential_in_complete_graph_case","text":"args string vector","code":""},{"path":"/reference/pontential_on_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"First example — pontential_on_graph","title":"First example — pontential_on_graph","text":"First example","code":""},{"path":"/reference/pontential_on_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"First example — pontential_on_graph","text":"","code":"pontential_on_graph(   vertex1,   vertex2,   weight,   netflow_R,   unique_geozomes,   num_samples,   seed )"},{"path":"/reference/pontential_on_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"First example — pontential_on_graph","text":"args string vector","code":""},{"path":"/reference/scalar_potential.html","id":null,"dir":"Reference","previous_headings":"","what":"This function calculates scalar potential of human flow for a given origin-destionation matrix. — scalar_potential","title":"This function calculates scalar potential of human flow for a given origin-destionation matrix. — scalar_potential","text":"function calculates scalar potential human flow given origin-destionation matrix.","code":""},{"path":"/reference/scalar_potential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function calculates scalar potential of human flow for a given origin-destionation matrix. — scalar_potential","text":"","code":"scalar_potential(od_table)"},{"path":"/reference/scalar_potential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function calculates scalar potential of human flow for a given origin-destionation matrix. — scalar_potential","text":"od_table data.frame three columns: origin, dest, trips","code":""},{"path":"/reference/scalar_potential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function calculates scalar potential of human flow for a given origin-destionation matrix. — scalar_potential","text":"data.frame two columns: zone potential","code":""},{"path":"/reference/scalar_potential_on_complete_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"This function calculates scalar potential of human flow for a given origin-destination matrix (complete (graph version). — scalar_potential_on_complete_graph","title":"This function calculates scalar potential of human flow for a given origin-destination matrix (complete (graph version). — scalar_potential_on_complete_graph","text":"function calculates scalar potential human flow given origin-destination matrix (complete (graph version).","code":""},{"path":"/reference/scalar_potential_on_complete_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function calculates scalar potential of human flow for a given origin-destination matrix (complete (graph version). — scalar_potential_on_complete_graph","text":"","code":"scalar_potential_on_complete_graph(od_table)"},{"path":"/reference/scalar_potential_on_complete_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function calculates scalar potential of human flow for a given origin-destination matrix (complete (graph version). — scalar_potential_on_complete_graph","text":"od_table data.frame three columns: origin, dest, trips","code":""},{"path":"/reference/scalar_potential_on_complete_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function calculates scalar potential of human flow for a given origin-destination matrix (complete (graph version). — scalar_potential_on_complete_graph","text":"data.frame two columns: zone potential","code":""},{"path":"/reference/scalar_potential_on_complete_graph_with_pvalue.html","id":null,"dir":"Reference","previous_headings":"","what":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (complete graph version). — scalar_potential_on_complete_graph_with_pvalue","title":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (complete graph version). — scalar_potential_on_complete_graph_with_pvalue","text":"function calculates scalar potential human flow given origin-destination matrix p-value (complete graph version).","code":""},{"path":"/reference/scalar_potential_on_complete_graph_with_pvalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (complete graph version). — scalar_potential_on_complete_graph_with_pvalue","text":"","code":"scalar_potential_on_complete_graph_with_pvalue(od_table)"},{"path":"/reference/scalar_potential_on_complete_graph_with_pvalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (complete graph version). — scalar_potential_on_complete_graph_with_pvalue","text":"od_table data.frame three columns: origin, dest, trips","code":""},{"path":"/reference/scalar_potential_on_complete_graph_with_pvalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (complete graph version). — scalar_potential_on_complete_graph_with_pvalue","text":"function returns data.frame three columns: zone, potential, p-value","code":""},{"path":"/reference/scalar_potential_on_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (unweighted graph version) — scalar_potential_on_graph","title":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (unweighted graph version) — scalar_potential_on_graph","text":"function calculates scalar potential human flow given origin-destination matrix p-value (unweighted graph version)","code":""},{"path":"/reference/scalar_potential_on_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (unweighted graph version) — scalar_potential_on_graph","text":"","code":"scalar_potential_on_graph(flow_on_edges, num_samples = 1e+05, seed = -1)"},{"path":"/reference/scalar_potential_on_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (unweighted graph version) — scalar_potential_on_graph","text":"flow_on_edges data.frame three columns: vertex1, vertex2, netflow. num_samples: Monte calro samples (default = 1e5) seed: Monte calro samples (default = -1, generate std::random_device)","code":""},{"path":"/reference/scalar_potential_on_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (unweighted graph version) — scalar_potential_on_graph","text":"function returns data.frame three columns: zone, potential, p-value","code":""},{"path":"/reference/scalar_potential_on_graph_details.html","id":null,"dir":"Reference","previous_headings":"","what":"This function calculates scalar potential of human flow for a given origin-destionation matrix (detailed version) — scalar_potential_on_graph_details","title":"This function calculates scalar potential of human flow for a given origin-destionation matrix (detailed version) — scalar_potential_on_graph_details","text":"function calculates scalar potential human flow given origin-destionation matrix (detailed version)","code":""},{"path":"/reference/scalar_potential_on_graph_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function calculates scalar potential of human flow for a given origin-destionation matrix (detailed version) — scalar_potential_on_graph_details","text":"","code":"scalar_potential_on_graph_details(   flow_on_edges,   num_samples = 1e+05,   seed = -1 )"},{"path":"/reference/scalar_potential_on_graph_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function calculates scalar potential of human flow for a given origin-destionation matrix (detailed version) — scalar_potential_on_graph_details","text":"flow_on_edges data.frame three columns: vertex1, vertex2, netflow. num_samples: Monte calro samples (default = 1e5) seed: Monte calro samples (default = -1, generate std::random_device)","code":""},{"path":"/reference/scalar_potential_on_graph_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function calculates scalar potential of human flow for a given origin-destionation matrix (detailed version) — scalar_potential_on_graph_details","text":"function returns list: value: data.frame three columns: zone, potential, p-value R2: percentage gradient component","code":""},{"path":"/reference/scalar_potential_on_weighted_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (weighted graph version) — scalar_potential_on_weighted_graph","title":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (weighted graph version) — scalar_potential_on_weighted_graph","text":"function calculates scalar potential human flow given origin-destination matrix p-value (weighted graph version)","code":""},{"path":"/reference/scalar_potential_on_weighted_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (weighted graph version) — scalar_potential_on_weighted_graph","text":"","code":"scalar_potential_on_weighted_graph(   flow_on_edges,   num_samples = 1e+05,   seed = -1 )"},{"path":"/reference/scalar_potential_on_weighted_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (weighted graph version) — scalar_potential_on_weighted_graph","text":"flow_on_edges data.frame three columns: vertex1, vertex2, weight, netflow. num_samples: Monte calro samples (default = 1e5) seed: Monte calro samples (default = -1, generate std::random_device)","code":""},{"path":"/reference/scalar_potential_on_weighted_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function calculates scalar potential of human flow for a given origin-destination matrix with p-value (weighted graph version) — scalar_potential_on_weighted_graph","text":"function returns data.frame three columns: zone, potential, p-value","code":""},{"path":"/reference/scalar_potential_with_details.html","id":null,"dir":"Reference","previous_headings":"","what":"This function calculates scalar potential of human flow for a given origin-destionation matrix with details — scalar_potential_with_details","title":"This function calculates scalar potential of human flow for a given origin-destionation matrix with details — scalar_potential_with_details","text":"function calculates scalar potential human flow given origin-destionation matrix details","code":""},{"path":"/reference/scalar_potential_with_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function calculates scalar potential of human flow for a given origin-destionation matrix with details — scalar_potential_with_details","text":"","code":"scalar_potential_with_details(od_table)"},{"path":"/reference/scalar_potential_with_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function calculates scalar potential of human flow for a given origin-destionation matrix with details — scalar_potential_with_details","text":"od_table data.frame three columns: origin, dest, trips","code":""},{"path":"/reference/scalar_potential_with_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function calculates scalar potential of human flow for a given origin-destionation matrix with details — scalar_potential_with_details","text":"function returns list: value: data.frame three columns: zone, potential, p-value R2: percentage gradient component","code":""}]
